{"version":3,"sources":["components/firebase.js","components/Main.js","stores/auth-context.js","components/Auth.js","components/NavBar/Navigation.js","components/Quiz/Score.js","components/Quiz/Quiz.js","components/Quiz/CreateQuiz.js","PrivateRoute.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","realdatabase","database","Main","useState","quizs","setQuizs","useEffect","ref","on","querySnapshot","data","val","Object","values","pt","spacing","pb","map","quiz","row","display","justifyContent","borderRadius","borderWidth","bg","p","w","h","align","fontSize","name","to","size","height","width","color","_hover","AuthContext","createContext","useAuth","useContext","AuthContextProvider","props","currentUser","setCurrentUser","isAdmin","setIsAdmin","loading","setLoading","signUp","email","password","a","createUserWithEmailAndPassword","then","newUser","collection","doc","uid","set","user","onAuthStateChanged","get","response","contextValue","login","signInWithEmailAndPassword","logout","signOut","Provider","value","children","Auth","isLogin","setIsLogin","isLoading","setIsLoading","error","setError","emailInputRef","useRef","passwordInputRef","history","useHistory","base","md","maxWidth","px","textAlign","my","onSubmit","e","event","preventDefault","enteredEmail","current","enteredPassword","replace","authSubmitHandler","status","htmlFor","id","type","placeholder","required","onClick","prevState","disabled","colorScheme","MenuItem","islast","mb","sm","mr","fontWeight","Header","show","setShow","as","maxW","justify","wrap","Close","Hamburger","flexBasis","direction","style","textDecoration","push","Score","boxShadow","overflow","rounded","textTransform","py","score","total","Quiz","questions","setQuestions","currentQuest","setCurrentQuest","showScore","setShowScore","setScore","currentPage","useParams","quizId","tempData","flexDirection","length","question","answers","isCorrect","pl","CreateQuiz","nameRef","choices","setChoices","correctAns","setCorrectAns","formValues","setFormValues","QuestionList","questionList","i","j","element","index","className","onChange","newFormValues","target","handleChange","Array","fill","_","newArr","updateChoices","mt","newChoiceValues","splice","prevstate","removeFormFields","enteredName","child","PrivateRoute","Component","component","rest","render","App","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2b4108d.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/database\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAIUyXqlnq0_p7Dtoej_vx1nQvWS-qUcU0\",\r\n  authDomain: \"react-69990.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://react-69990-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"react-69990\",\r\n  storageBucket: \"react-69990.appspot.com\",\r\n  messagingSenderId: \"569670275960\",\r\n  appId: \"1:569670275960:web:872cb0c1b85921ca502e8d\",\r\n});\r\nexport const auth = firebase.auth();\r\nexport const db = app.firestore();\r\nexport const realdatabase = app.database();\r\n\r\nexport default app;\r\n","import { HStack, VStack, Text, Flex, Button, Heading } from \"@chakra-ui/react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { realdatabase } from \"./firebase\";\r\n\r\nconst Main = () => {\r\n  const [quizs, setQuizs] = useState(null);\r\n  useEffect(() => {\r\n    realdatabase.ref(\"/list\").on(\"value\", (querySnapshot) => {\r\n      const data = querySnapshot.val() || null;\r\n      if (data) {\r\n        setQuizs(Object.values(data));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <VStack pt={6} spacing={4}>\r\n      <Heading pb={3}>Quizs</Heading>\r\n      {quizs !== null &&\r\n        quizs.map((quiz, row) => (\r\n          <HStack\r\n            key={quiz.name}\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            borderRadius={30}\r\n            borderWidth={1}\r\n            bg=\"gray.300\"\r\n          >\r\n            <Flex\r\n              p={4}\r\n              w=\"400px\"\r\n              h=\"70px\"\r\n              justifyContent=\"space-between\"\r\n              align=\"center\"\r\n            >\r\n              <Text fontSize={20}>{quiz.name}</Text>\r\n              <Link to={`/Quiz/quiz/${row + 1}`}>\r\n                <Button\r\n                  size=\"md\"\r\n                  height=\"48px\"\r\n                  width=\"100px\"\r\n                  borderRadius={15}\r\n                  bg=\"gray.800\"\r\n                  color=\"white\"\r\n                  _hover={{ bg: \"gray.700\" }}\r\n                >\r\n                  Play\r\n                </Button>\r\n              </Link>\r\n            </Flex>\r\n          </HStack>\r\n        ))}\r\n      )\r\n    </VStack>\r\n  );\r\n};\r\nexport default Main;\r\n","import { useState, useEffect, useContext, createContext } from \"react\";\r\nimport { auth, db } from \"../components/firebase\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [isAdmin, setIsAdmin] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const signUp = async (email, password) => {\r\n    auth.createUserWithEmailAndPassword(email, password).then((newUser) => {\r\n      const userRef = db.collection(\"users\").doc(auth.currentUser.uid);\r\n      userRef.set({\r\n        email: email,\r\n        uid: newUser.user.uid,\r\n        isAdmin: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  const login = (email, password) => {\r\n    auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  const logout = () => {\r\n    return auth.signOut();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n\r\n      if (user) {\r\n        const userRef = db.collection(\"users\").doc(user.uid);\r\n        userRef.get().then((response) => {\r\n          setIsAdmin(response.data().isAdmin);\r\n        });\r\n      }\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const contextValue = {\r\n    currentUser,\r\n    signUp,\r\n    login,\r\n    logout,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {!loading && props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import { useState, useRef } from \"react\";\r\nimport { Flex, Stack, Box, Heading, Link } from \"@chakra-ui/layout\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { Alert } from \"@chakra-ui/alert\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../stores/auth-context\";\r\n\r\nfunction Auth() {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const { signUp, login } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const authSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    if (isLogin) {\r\n      try {\r\n        login(enteredEmail, enteredPassword);\r\n        history.replace(\"/Quiz/\");\r\n      } catch {\r\n        setError(\"Failed to sign in\");\r\n      }\r\n    } else {\r\n      try {\r\n        signUp(enteredEmail, enteredPassword);\r\n        history.replace(\"/Quiz/\");\r\n      } catch {\r\n        setError(\"Failed to create an account\");\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const authSwitchHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      width=\"full\"\r\n      pt={{ base: 0, md: 12 }}\r\n      align=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Box\r\n        borderWidth={{ base: 0, md: 1 }}\r\n        width=\"full\"\r\n        maxWidth=\"500px\"\r\n        px={4}\r\n        textAlign=\"center\"\r\n        borderRadius={4}\r\n      >\r\n        <Box my={4}>\r\n          <form onSubmit={(e) => authSubmitHandler(e)}>\r\n            {error && <Alert status=\"error\">{error}</Alert>}\r\n            <Heading>{isLogin ? \"Login\" : \"Register\"}</Heading>\r\n            <Box p={4}>\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"email\">Email address</FormLabel>\r\n                <Input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  ref={emailInputRef}\r\n                  placeholder=\"Enter your email address\"\r\n                  required\r\n                />\r\n                <FormLabel htmlFor=\"password\" pt={4}>\r\n                  Password\r\n                </FormLabel>\r\n                <Input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  ref={passwordInputRef}\r\n                  placeholder=\"Enter your password\"\r\n                  required\r\n                />\r\n              </FormControl>\r\n              <Stack pt={2}>\r\n                <Link onClick={authSwitchHandler}>\r\n                  {isLogin\r\n                    ? \"Create new account\"\r\n                    : \"Login with an existing account\"}\r\n                </Link>\r\n              </Stack>\r\n            </Box>\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              width=\"full\"\r\n              colorScheme=\"blue\"\r\n            >\r\n              {isLoading\r\n                ? \"Sending request...\"\r\n                : isLogin\r\n                ? \"Sign In\"\r\n                : \"Sign Up\"}\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { useState, useContext } from \"react\";\r\nimport { Container, Flex, Box, Text, Link as LinkText } from \"@chakra-ui/react\";\r\nimport { CloseIcon, HamburgerIcon } from \"@chakra-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../stores/auth-context\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst MenuItem = ({ children, islast, to = \"/\" }) => {\r\n  return (\r\n    <Text\r\n      mb={{ base: islast ? 0 : 8, sm: 0 }}\r\n      mr={{ base: 0, sm: islast ? 0 : 8 }}\r\n      display=\"block\"\r\n      fontSize=\"lg\"\r\n      fontWeight=\"bold\"\r\n    >\r\n      <Link to={to}>{children}</Link>\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst Header = (props) => {\r\n  const { currentUser, logout, isAdmin } = useAuth();\r\n  const [show, setShow] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    logout();\r\n    history.push(\"/Quiz/\");\r\n  };\r\n\r\n  return (\r\n    <Flex as=\"nav\" mb={4} p={4} bg={\"blue.500\"} color={\"white\"} {...props}>\r\n      <Container maxW=\"container.lg\">\r\n        <Flex justify=\"space-between\" align=\"center\" wrap=\"wrap\" {...props}>\r\n          <Box>\r\n            <Text fontSize=\"2xl\" fontWeight=\"bold\">\r\n              <Link to=\"/Quiz/\">Quiz</Link>\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box\r\n            display={{ base: \"block\", md: \"none\" }}\r\n            onClick={() => setShow(!show)}\r\n          >\r\n            {show ? <CloseIcon /> : <HamburgerIcon />}\r\n          </Box>\r\n\r\n          <Box\r\n            display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n            flexBasis={{ base: \"100%\", md: \"auto\" }}\r\n          >\r\n            <Flex\r\n              align=\"center\"\r\n              justify={[\"center\", \"space-between\"]}\r\n              direction={[\"column\", \"row\"]}\r\n            >\r\n              {currentUser && isAdmin ? (\r\n                <MenuItem to=\"/Quiz/create-quiz\">Create Quiz</MenuItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {currentUser ? (\r\n                <LinkText\r\n                  style={{ textDecoration: \"none\" }}\r\n                  fontSize=\"lg\"\r\n                  fontWeight=\"bold\"\r\n                  islast=\"true\"\r\n                  onClick={handleLogout}\r\n                >\r\n                  Logout\r\n                </LinkText>\r\n              ) : (\r\n                <MenuItem to=\"/Quiz/auth\" islast=\"true\">\r\n                  Sign In\r\n                </MenuItem>\r\n              )}\r\n            </Flex>\r\n          </Box>\r\n        </Flex>\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Box, Text } from \"@chakra-ui/layout\";\r\n\r\nconst Score = (props) => {\r\n  return (\r\n    <Box\r\n      maxW={\"500px\"}\r\n      w={\"full\"}\r\n      bg=\"blue.500\"\r\n      pb={8}\r\n      boxShadow={\"2xl\"}\r\n      overflow={\"hidden\"}\r\n      rounded={\"md\"}\r\n    >\r\n      <Box bg=\"gray.800\">\r\n        <Text\r\n          color=\"white\"\r\n          textAlign=\"center\"\r\n          textTransform=\"uppercase\"\r\n          fontSize=\"20\"\r\n          py={3}\r\n        >\r\n          {`Score: ${props.score} / ${props.total}`}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import { Box, Center, Flex, Text, Button, VStack } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { realdatabase } from \"../firebase\";\r\nimport Score from \"./Score\";\r\n\r\nconst Quiz = () => {\r\n  const [questions, setQuestions] = useState(null);\r\n  const [currentQuest, setCurrentQuest] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const params = useParams();\r\n\r\n  const currentPage = params.quizId - 1;\r\n\r\n  useEffect(() => {\r\n    realdatabase.ref(\"/list\").on(\"value\", (querySnapshot) => {\r\n      const data = querySnapshot.val() || null;\r\n      if (data) {\r\n        const tempData = Object.values(data);\r\n        setQuestions(tempData[currentPage]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const answerHandler = (correctAnswer) => {\r\n    if (correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n    if (currentQuest + 1 < questions.questions.length) {\r\n      setCurrentQuest(currentQuest + 1);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {questions !== null && (\r\n        <Center py={9} flexDirection=\"column\">\r\n          <Text textAlign=\"center\" fontSize=\"25\" fontWeight={\"bold\"} py={4}>\r\n            {showScore\r\n              ? \"Quiz Results\"\r\n              : `Question ${currentQuest + 1} of ${questions.questions.length}`}\r\n          </Text>\r\n\r\n          {!showScore && (\r\n            <Box\r\n              maxW={\"500px\"}\r\n              w={\"full\"}\r\n              bg=\"blue.500\"\r\n              pb={8}\r\n              boxShadow={\"2xl\"}\r\n              overflow={\"hidden\"}\r\n              rounded={\"md\"}\r\n            >\r\n              <Box bg=\"gray.800\">\r\n                <Text\r\n                  color=\"white\"\r\n                  textAlign=\"center\"\r\n                  textTransform=\"uppercase\"\r\n                  fontSize=\"20\"\r\n                  py={3}\r\n                >\r\n                  {questions.questions[currentQuest].question}\r\n                </Text>\r\n              </Box>\r\n              <VStack spacing={4} pt={8}>\r\n                {questions.questions[currentQuest].answers.map((data) => (\r\n                  <Button\r\n                    key={data.name}\r\n                    borderRadius={15}\r\n                    height={45}\r\n                    value={data.isCorrect}\r\n                    onClick={(e) => answerHandler(data.isCorrect)}\r\n                  >\r\n                    <Flex align=\"center\" p={4} w=\"400px\" align=\"center\">\r\n                      <Text fontSize={28} px={2} fontWeight=\"bold\">\r\n                        {data.id}\r\n                      </Text>\r\n                      <Text pl={4} fontSize={20}>\r\n                        {data.name}\r\n                      </Text>\r\n                    </Flex>\r\n                  </Button>\r\n                ))}\r\n              </VStack>\r\n            </Box>\r\n          )}\r\n          {showScore && (\r\n            <Score score={score} total={questions.questions.length} />\r\n          )}\r\n        </Center>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import {\r\n  Center,\r\n  FormControl,\r\n  Input,\r\n  Heading,\r\n  FormLabel,\r\n  Box,\r\n  Button,\r\n  RadioGroup,\r\n  Radio,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useRef, useState } from \"react\";\r\nimport { realdatabase } from \"../firebase\";\r\n\r\nconst CreateQuiz = () => {\r\n  const nameRef = useRef();\r\n  const [choices, setChoices] = useState([[]]);\r\n  const [questions, setQuestions] = useState(1);\r\n  const [correctAns, setCorrectAns] = useState(\"1\");\r\n  const [formValues, setFormValues] = useState([{}]);\r\n\r\n  const handleChange = (i, e) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  const updateChoices = (index, row, e) => {\r\n    let newArr = [...choices];\r\n    newArr[index][row] = e.target.value;\r\n    setChoices(newArr);\r\n  };\r\n  const addFormFields = () => {\r\n    setFormValues([...formValues, []]);\r\n    setChoices([...choices, []]);\r\n    setQuestions((prevstate) => (prevstate += 1));\r\n  };\r\n\r\n  const removeFormFields = (i) => {\r\n    let newFormValues = [...formValues];\r\n    let newChoiceValues = [...choices];\r\n\r\n    newFormValues.splice(i, 1);\r\n    newChoiceValues.splice(i, 1);\r\n\r\n    setFormValues(newFormValues);\r\n    setChoices(newChoiceValues);\r\n    setQuestions((prevstate) => (prevstate -= 1));\r\n  };\r\n\r\n  function QuestionList(id) {\r\n    let questionList = [];\r\n    for (let i = 0; i < +questions; i++) {\r\n      let answers = [];\r\n      for (let j = 0; j < 4; j++) {\r\n        answers.push({\r\n          id: \"A\",\r\n          name: choices[i][j],\r\n          isCorrect: correctAns == j ? true : false,\r\n        });\r\n      }\r\n      questionList.push({\r\n        question: formValues[i].question,\r\n        answers,\r\n      });\r\n    }\r\n    return questionList;\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const enteredName = nameRef.current.value;\r\n\r\n    realdatabase.ref().child(\"/list\").push({\r\n      name: enteredName,\r\n      questions: QuestionList(),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Center py={9} flexDirection=\"column\">\r\n      <Heading>Create Quiz</Heading>\r\n      <Box width={700}>\r\n        <FormControl>\r\n          <FormLabel htmlFor=\"name\" id=\"name\">\r\n            Quiz Name\r\n          </FormLabel>\r\n          <Input\r\n            required\r\n            ref={nameRef}\r\n            id=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter quiz name\"\r\n            mb={10}\r\n            width={300}\r\n          />\r\n          <Text align=\"center\" fontSize=\"3xl\" fontWeight=\"bold\">\r\n            Questions\r\n          </Text>\r\n          {formValues.map((element, index) => (\r\n            <Box pb={20} className=\"form-inline\" key={index}>\r\n              <Box>\r\n                <Box mb={10}>\r\n                  <FormLabel>Question</FormLabel>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"question\"\r\n                    value={element.question || \"\"}\r\n                    onChange={(e) => handleChange(index, e)}\r\n                  />\r\n                </Box>\r\n                <RadioGroup>\r\n                  <Box display=\"flex\" justifyContent=\"space-between\">\r\n                    {Array(4)\r\n                      .fill(1)\r\n                      .map((_, row) => (\r\n                        <Box key={row}>\r\n                          <FormLabel>{`Choice ${row + 1}`}</FormLabel>\r\n\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"choice\"\r\n                            value={choices[index][row]}\r\n                            onChange={(e) => updateChoices(index, row, e)}\r\n                            width={40}\r\n                          />\r\n                          <Radio\r\n                            value={`${row}`}\r\n                            onClick={(e) => setCorrectAns(e.target.value)}\r\n                          >\r\n                            Correct answer\r\n                          </Radio>\r\n                        </Box>\r\n                      ))}\r\n                  </Box>\r\n                </RadioGroup>\r\n              </Box>\r\n              {index ? (\r\n                <Button\r\n                  mt={30}\r\n                  type=\"button\"\r\n                  className=\"button remove\"\r\n                  onClick={() => removeFormFields(index)}\r\n                >\r\n                  Remove\r\n                </Button>\r\n              ) : null}\r\n            </Box>\r\n          ))}\r\n          <div className=\"button-section\">\r\n            <Button\r\n              mr={6}\r\n              className=\"button add\"\r\n              type=\"button\"\r\n              onClick={addFormFields}\r\n            >\r\n              Add question\r\n            </Button>\r\n            <Button className=\"button submit\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </FormControl>\r\n      </Box>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./stores/auth-context\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser, isAdmin } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return isAdmin && currentUser ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/Quiz/\" />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport Auth from \"./components/Auth\";\nimport { CSSReset } from \"@chakra-ui/css-reset\";\nimport { AuthContextProvider } from \"./stores/auth-context\";\nimport Header from \"./components/NavBar/Navigation\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Quiz from \"./components/Quiz/Quiz\";\nimport CreateQuiz from \"./components/Quiz/CreateQuiz\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <AuthContextProvider>\n        <CSSReset />\n        <Header />\n        <Switch>\n          <Route path=\"/Quiz/\" exact component={Main} />\n          <Route path=\"/Quiz/auth\" component={Auth} />\n          <PrivateRoute path=\"/create-quiz\" component={CreateQuiz} />\n\n          <Route path=\"/Quiz/quiz/:quizId\" component={Quiz} />\n          <Route path=\"*\">\n            <Redirect to=\"/Quiz/\" />\n          </Route>\n        </Switch>\n      </AuthContextProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}